@startuml

interface Readable {
    read()
}

interface Writeable {
    write()
}

class Array<T> {
    +assign(T)
    +operator[](int)
}

class Date {
    - int year
    - int month
    - int day
}

class Customer {
    - long id
    - float total
    - float discount
    + operator+(int)
}

class Product {
    - string name
    - float price
    - bool hasDiscount
    + operator+(int)
}

class Order {
    - Customer customer
    - Array<Product *> products
    - Date date
    - float totalWithDiscount
    - float total
    + addProduct(Product)
}

class DailyReport {
    - Array<Order *> orders
    - Date date
    + addOrder(Order)
}

Order *- Date
Order o-- Product
Order o-- Customer

DailyReport o-- Order
DailyReport *-- Date

Writeable <|.. Order
Writeable <|. Product
Writeable <|. Customer
Writeable <|. Date
Writeable <|.. DailyReport
Readable <|. Date
Readable <|. Customer
Readable <|. Product
Readable <|.. Order
Readable <|.. DailyReport

class std::invalid_argument {
}
class ValidationException {
}

std::invalid_argument <|-- ValidationException

@enduml